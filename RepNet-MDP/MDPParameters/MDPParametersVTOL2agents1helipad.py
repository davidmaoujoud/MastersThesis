
class MDPParameters:

    def __init__(self, decay=0.7, learning_rate=1, delta_weight=0.8, update_function="difference_update", epsilon_convergence=0.1, steps=50, lookahead_depth=3, first_state=0, use_oracle=False):
        self.decay = decay
        self.learning_rate = learning_rate
        self.delta_weight = delta_weight
        self.update_function = update_function
        self.epsilon_convergence = epsilon_convergence
        self.steps = steps
        self.lookahead_depth = lookahead_depth
        self.first_state = first_state
        self.use_oracle = use_oracle

        self.agents = [0,1]
        self.states = list(range(16))
        self.actions_u = [0,1]
        self.actions_d = []

        self.agent_types = ["mdp", "oracle"]  # Can be repnet, mdp, oracle, qlearner

        self.objective_transition_model = [
            [   ################ STAY/STAY ############################
                [[0,0,0,0,   0,1,0,0,    0,0,0,0,     0,0,0,    0]],
                [[0,0,0,0,   0,0,1,0,    0,0,0,0,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,1,    0,0,0,0,     0,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,    0,1,0,0,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,1,0,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,1,     1,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,1,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,1,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],

                [[0,0,0,0,   0,0,0,0,        0,0,0,0,        0,0,0,    1]]
            ],

            [   ################ STAY/SWITCH ############################
                [[0,0,0,0,   0,0,0,1,    0,0,0,0,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,1,    0,0,0,0,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,1,    0,0,0,0,     0,0,0,    0]],
                [[0,0,0,0,   1,0,0,0,    0,0,0,0,     0,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,1,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,1,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,1,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,0,    1,0,0,0,     0,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,1,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,1,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],

                [[0,0,0,0,   0,0,0,0,        0,0,0,0,        0,0,0,    1]]
            ],

            [   ################ SWITCH/STAY ############################
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,1,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,1,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,1,    0,0,0,0,     0,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,1,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,1,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,1,     0,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,1,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,1,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],

                [[0,1,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    0]],
                [[0,0,1,0,   0,0,0,0,    0,0,0,0,     0,0,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],

                [[0,0,0,0,   0,0,0,0,        0,0,0,0,        0,0,0,    1]]
            ],

            [   ################ SWITCH/SWITCH ############################
                [[0,0,0,0,   0,0,0,0.5,    0,0,0,0,     0,0.5,0,    0]],
                [[0,0,0,0,   0,0,0,0.5,    0,0,0,0,     0,0,0.5,    0]],
                [[0,0,0,0,   0,0,0,0.5,    0,0,0,0,     0,0,0,    0.5]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     1,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,0.5,     0,0.5,0,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0.5,     0,0,0.5,    0]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0.5,     0,0,0,    0.5]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     1,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0.5,0,    0.5]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0.5,    0.5]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     0,0,0,    1]],
                [[0,0,0,0,   0,0,0,0,    0,0,0,0,     1,0,0,    0]],

                [[0,0,0,1,   0,0,0,0,    0,0,0,0,     0,0,0,    0]],
                [[0,0,0,1,   0,0,0,0,    0,0,0,0,     0,0,0,    0]],
                [[0,0,0,1,   0,0,0,0,    0,0,0,0,     0,0,0,    0]],

                [[0,0,0,0,   0,0,0,0,        0,0,0,0,        0,0,0,    1]]
            ]
        ]







        # Actions: stay, switch
        # Impact(agent1, agent2, state, action_performed_by_agent2)
        self.impact_function = [
            [
                [[0,0.4], [0,0.4], [0,-1], [0,0],   [0,0.2], [0,0.2], [0,-1], [0,0.5],   [-1,1], [-1,1], [-1,1], [-1,1],   [0.6,1], [0.8,1], [-1,1],   [-1,-1]],
                [[0,0], [0.2,-0.3], [0,0], [-1,0.1],     [0,0], [0,0], [0,0], [-1,0],       [1,-1], [1,-1], [0,-1], [-1,1],   [0,0], [0,0], [0,0.3],            [-1,-1]]
            ],

            [
                [[0,0], [0,0], [0,-1], [0,0], [0,0], [0,0], [0,-1], [0,0], [0,0], [0,0], [0,-1], [0,0], [-0.1,0.1], [-0.2,0.2], [-1,1], [-1,-1]],
                [[0,0], [0,0.1], [-1,1], [0,0], [0,0], [0,0.1], [-1,1], [0,0], [0,-1], [0,0.1], [-1,1], [0,0], [0,0], [0,0.1], [-1,1], [-1,-1]]
            ]
        ]




        # wait_for_A
        self.directed_transition_models = [
            # Agent 1/G
            [
                [[[]]]  # Start in state 0
            ],

            # Agent 2/A
            [
                [[[]]]
            ]
        ]


        self.restrictions = [
            [],
            []
        ]


        self.directed_undirected_equivalence = [
            [], # To the outside system, "wait" is equivalent to do nothing
            []
        ]



